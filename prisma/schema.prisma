// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model RoomType {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String   @unique
  price     Float
  rooms     Room[]
}

model Room {
  id          Int      @id @default(autoincrement())
  number      Int      @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  isAvailable Boolean  @default(true)
  roomTypeId  Int
  location    String

  roomType    RoomType @relation(fields: [roomTypeId], references: [id])
}
model Guest {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  firstName   String
  lastName    String
  email       String?    @unique
  phone       String?

  bookings  Booking[] // One-to-many relationship with Booking
}

model Booking {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  paid        Boolean   @default(false)
  guestId     Int
  totalAmount Float?

  guest       Guest     @relation(fields: [guestId], references: [id])
  roomsBooked RoomBooked[] // One-to-many relationship with RoomBooked
}

model RoomBooked {
  id          Int       @id @default(autoincrement())
  roomId      Int
  checkedIn   Boolean   @default(false)
  startDate   DateTime
  endDate     DateTime
  bookingId   Int

  booking     Booking   @relation(fields: [bookingId], references: [id])
}

model UserAccount {
  id              Int          @id @default(autoincrement())
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
  username        String       @unique
  password        String?
  hashedRT        String?
  role            String
  isActive        Boolean      @default(true)

  @@map("UserAccount")
}